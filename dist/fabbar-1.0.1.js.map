{"version":3,"sources":["index.jsx"],"names":["FAB","style","onClick","href","target","icon","label","primary","staticLabel","FABBarModal","props","state","open","alwaysOpen","direction","primaryActive","setState","prevState","primaryAction","openOnHover","setTimeout","closeOnScroll","scrollHandler","openClose","window","addEventListener","removeEventListener","bind","orientation","undefined","actions","staticLabels","classes","className","join","isModal","url","action","slice","map","button","ceepOpen","React","Component","FABBar","rootSelector","document","querySelector","container","createElement","appendChild","removeChild","ReactDOM","createPortal"],"mappings":"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","file":"fabbar-1.0.1.js","sourcesContent":["/**\n * This FAB-bar exposes a row of secondary FAB buttons when clicked or on hover.\n *\n * You can choose in which direction the secondary buttons goes with a parameter.\n * Position of the FAB-bar is done with CSS. In this example, I use the style\n * classes upperLeft, lowerRight, etc ... but that is up to whoever uses this\n * component.\n *\n * The actions are given by an array of objects:\n *\n * { action, icon, label, url, target }\n *\n * action is a js function executed on click. If given an url, the button is\n * turned in to a normal link (able to right-click > Open Link in New Tab).\n * This link can also be given a target (optional).\n *\n * The icon must be a Material Icons icon, only using the text content.\n *\n * Per default, clicking on any secondary button closes the FAB bar again. This\n * can be avoided by giving an function as action that returns true.\n *\n * The secondary buttons can be used both as links, function buttons and both.\n *\n * The primary button can turn into a action button, with the attribute\n * primaryAction set to true. This uses the first given action as the primary\n * action.\n *\n * When setting openOnHover or alwaysOpen to true, the primary button will\n * always work as an action button.\n *\n * alwaysOpen will show all the buttons ALL THE TIME.\n *\n *\n * TODO:\n * - Clicking outside FAB Speed Dial closes it.\n * - On mobile, white transparent overlay on whole screen.\n * - Different color when button is active.\n *\n */\n\nfunction FAB({style, onClick, href, target = '', icon, label, primary, staticLabel=false}) {\n  return (\n    <a style={style}\n       role=\"menuitem\"\n       href={href}\n       target={target}\n       aria-label={label}\n       onClick={onClick}\n       className={'tlx-material-fab-button ' + (primary ? 'primary' : 'secondary')}>\n      <i className=\"material-icons tlx-fab-bar--icon\">{icon}</i>\n      {staticLabel ? <span className=\"tlx-fab-bar--label\">{label}</span> : null}\n    </a>\n  );\n}\n\nclass FABBarModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: props.alwaysOpen,\n      direction: props.direction || 'up',\n      primaryActive: false\n    };\n  }\n\n  // Open/closes the FAB Bar\n  openClose() {\n    this.setState(prevState => ({open: !prevState.open}));\n    if(this.props.primaryAction || this.props.openOnHover || this.props.direction === 'menu') {\n      setTimeout(() => this.setState(prevState => ({primaryActive: prevState.open})), 100);\n    }\n  }\n\n  componentDidMount() {\n    if(this.props.closeOnScroll) {\n      this.scrollHandler = () => {\n        this.state.open && this.openClose();\n      };\n      window.addEventListener('scroll', this.scrollHandler);\n    }\n  }\n\n  componentWillUnmount() {\n    if(this.props.closeOnScroll) {\n      window.removeEventListener('scroll', this.scrollHandler);\n    }\n  }\n\n  render() {\n    const openClose = this.openClose.bind(this);\n    const props = this.props;\n    const orientation = props.direction === 'up' || props.direction === 'down' ? 'vertical' : 'horizontal';\n    const primaryAction = props.primaryAction !== undefined ? props.primaryAction : props.alwaysOpen || props.openOnHover;\n    const primary = primaryAction ? props.actions[0] : {};\n    const staticLabels = this.props.direction === 'menu';\n\n    const classes = [\n      'tlx-fab-bar',\n      'tlx-fab-bar--' + (this.state.open ? 'open' : 'closed'),\n      'tlx-fab-bar--' + props.direction,\n      // This style class is inserted/removed 100ms after menu is open/closed\n      // For making animations betterish\n      this.state.primaryActive ? 'tlx-fab-bar--primaryActive' : '',\n      props.className\n    ].join(' ');\n\n\n    return (\n      [this.props.isModal ? <div className={'tlx-fab-bar-overlay tlx-fab-bar-overlay' + (this.state.open ? '--open' : '--closed')} onClick={openClose}></div> : null,\n      <div className={classes}\n           role=\"toolbar\"\n           aria-expanded={this.state.open}\n           aria-orientation={orientation}\n           aria-haspopup=\"true\"\n           onMouseEnter={\n             props.openOnHover && !props.alwaysOpen ? openClose : undefined\n           }\n           onMouseLeave={\n             props.openOnHover && !props.alwaysOpen ? openClose : undefined\n           }>\n\n        <FAB icon={this.state.primaryActive && props.alwaysOpen ? primary.icon : 'close' }\n             href={primary.url}\n             target={primary.target}\n             label={primary.label || props.label}\n             staticLabel={staticLabels}\n             primary=\"true\"\n             onClick={() => {\n               (this.state.primaryActive || props.alwaysOpen) && primary.action && primary.action();\n               if(props.openOnHover || this.props.alwaysOpen) return;\n               openClose();\n             }} />\n\n         <div className=\"tlx-fab-bar--link-container\">\n        {props.actions.slice(primaryAction ? 1 : 0).map(\n          button => {\n            function onClick() {\n              if(props.openOnHover || props.alwaysOpen) {\n                button.action && button.action();\n                return;\n              }\n              const ceepOpen = button.action && button.action();\n              if(!ceepOpen) {\n                openClose();\n              }\n            }\n\n            return <FAB icon={button.icon}\n                        href={button.url}\n                        target={button.target}\n                        staticLabel={staticLabels}\n                        label={button.label}\n                        onClick={onClick} />;\n        })}\n         </div>\n      </div>]\n    );\n  }\n}\n\nclass FABBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rootSelector = document.querySelector('body');\n    this.container = document.createElement('div');\n  }\n\n  componentDidMount() {\n    this.rootSelector.appendChild(this.container);\n  }\n\n  componentWillUnmount() {\n    this.rootSelector.removeChild(this.container);\n  }\n\n  render () {\n    return ReactDOM.createPortal(<FABBarModal {...this.props} />, this.container);\n  }\n}\n"]}